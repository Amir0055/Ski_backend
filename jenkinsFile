pipeline{
    agent any
    stages {
        stage("Testing Maven"){
            steps {
                sh "mvn -version"
            }
        }
        stage("Testing JDK"){
            steps {
                sh "java -version"
            }
        }
        stage("Chekout Git"){
            steps {
                echo "Pulling"
            }
        }
        stage('MVN COMPILE') {
            steps{
                sh 'mvn compile'
        }
}
    stage('MVN SONARQUBE') {
            steps{
                sh 'mvn sonar:sonar -Dsonar.login=admin -Dsonar.password=sonar'
            }
        }
          stage('MVN Nexus') {
                    steps{
                        sh 'mvn deploy -Dmaven.test.skip=true'
                }
        }
         stage('Docker Image ') {
                    steps{
                        sh 'docker build -t nawresakri/gestion-station-ski-1.0 .'
                }
        }
            stage('Docker HUB') {
                    steps{
                        sh 'docker login -u nawresakri -p Docker2023'
                        sh 'docker push nawresakri/gestion-station-ski-1.0'
                }
        }
         stage('Docker Compose') {
                            steps{
                                sh 'docker-compose up -d'
                        }
                }
    }
    post {
            success {
                emailext(
                    subject: "Build Successful: Build #${currentBuild.number}",
                    body: "The build was successful. Build number: ${currentBuild.number}",
                    to: 'khouloud.askri@esprit.tn'
                )
            }
            failure {
                emailext(
                    subject: "Build Failed: Build #${currentBuild.number}",
                    body: "The build has failed. Build number: ${currentBuild.number}",
                    to: 'khouloud.askri@esprit.tn'
                )
            }
        }
}